getgenv().player = game:GetService("Players").LocalPlayer
getgenv().autoswing = false
getgenv().lockon = false
getgenv().range = 0
getgenv().lockOnRange = 0
getgenv().autoswingfov = 0
getgenv().zaddy = false
getgenv().fov = false
getgenv().ssss = game.Players.LocalPlayer:GetMouse()

game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    local closestPlayer = nil
    local closestDistance = math.huge

    for i = 2, #p do
        local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") then
            local distance = player:DistanceFromCharacter(v.HumanoidRootPart.Position)
            if distance <= lockOnRange or distance <= range and distance < closestDistance and v.Humanoid.Health > 0 then
                closestPlayer = v
                closestDistance = distance
            end
        end
    end
    if closestDistance <= lockOnRange and lockon == true and closestPlayer:FindFirstChild("Head") and closestPlayer:FindFirstChildOfClass('Humanoid') and closestPlayer:FindFirstChildOfClass('Humanoid').Health > 0 then
		player.Character:FindFirstChildOfClass('Humanoid').AutoRotate = false
	else
		player.Character:FindFirstChildOfClass('Humanoid').AutoRotate = true
	end
    if closestPlayer and closestPlayer:FindFirstChildOfClass('Humanoid') and closestPlayer:FindFirstChildOfClass('Humanoid').Health > 0  then
        local targetDirection = (closestPlayer.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).unit
        local playerFacingDirection = player.Character.HumanoidRootPart.CFrame.lookVector
        local dotProduct = playerFacingDirection:Dot(targetDirection)
    getgenv().TargetPart = closestPlayer.HumanoidRootPart
getgenv().Part = player.Character.HumanoidRootPart
getgenv().RotateX, RotateY, RotateZ = 0, 0, 0
	if lockon == true and closestPlayer:FindFirstChild("Head") and closestDistance <= lockOnRange and closestPlayer:FindFirstChildOfClass('Humanoid') and closestPlayer:FindFirstChildOfClass('Humanoid').Health > 0 and player.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
spawn(function()
wait(0.1)
Part.CFrame = CFrame.new(Part.Position, TargetPart.Position) * CFrame.Angles(math.rad(0), math.rad(25), math.rad(0))
		
end)
	end
        
        
        if closestDistance <= range and closestPlayer:FindFirstChild("Head") and  closestPlayer:FindFirstChildOfClass('Humanoid') and closestPlayer:FindFirstChildOfClass('Humanoid').Health > 0  then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") and getgenv().autoswing == true then
            
			if dotProduct >= 0.5 or fov == false then
			    tool:Activate()
                for i, v in next, closestPlayer:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle, v, 0)
                        firetouchinterest(tool.Handle, v, 1)
					end
                    end

										end
            	end
        end
    end
end)

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("here is da")

local b = w:CreateFolder("best sword gui")
b:Slider("Range",{
    min = 1; 
    max = 25;
    precise = false;
},function(value)
getgenv().range = value
end)
b:Slider("lock on Range",{
    min = 1; 
    max = 25; 
    precise = false; 
},function(value)
getgenv().lockOnRange = value
end)
b:Slider("Autoswing fov",{
    min = 0; 
    max = 1.01; 
    precise = true; 
},function(value)
if value == 1.01 then
	getgenv().fov = false
	else
getgenv().autoswingfov = value
getgenv().fov = true
end
end)
local yourvariable = b:Label("Lockon is false",{
    TextSize = 25; 
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
local yourvariable2 = b:Label("Autoswing is false",{
    TextSize = 25; 
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
ssss.KeyDown:connect(function(key)
if key == "z" then
getgenv().lockon = not lockon
yourvariable:Refresh("Lockon is "..tostring(lockon)) 
end
end)
ssss.KeyDown:connect(function(key)
if key == "x" then
getgenv().autoswing = not autoswing
yourvariable2:Refresh("Autoswing is "..tostring(autoswing)) 
end
end)
